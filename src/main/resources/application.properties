cloudcard.api.url=https://api.onlinephotosubmission.com/api
cloudcard.api.accessToken=must-specify-a-valid-api-key
#
# Storage Service
#  - FileStorageService
#  - DatabaseStorageService
downloader.storageService=FileStorageService
downloader.repeat=true
# Millisecond conversion reference
# Ten minutes = 600000
# Five minutes = 300000
# One minute = 60000
downloader.delay.milliseconds=600000
downloader.cron.schedule=0 0 0 1 1 ?
downloader.scheduling.type=fixedDelay
# Photos with these statuses will be downloaded. Separate statuses with a comma.
downloader.fetchStatuses=READY_FOR_DOWNLOAD
# Downloaded photos will be marked with this status in the CloudCard web application.
downloader.putStatus=DOWNLOADED
#absolute path to the photoDirectory(ies). Separate multiple directories with commas.
downloader.photoDirectories=downloaded-photos
# Photo IDs will be left padded with zeros (0) if they are shorter than this #
downloader.minPhotoIdLength=0
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
# External Commands
#ShellCommandService.preExecuteCommand=/Users/terskine/git/online-photo-submission/cloudcard-photo-downloader/dummy-script.sh
ShellCommandService.preExecuteCommand=
ShellCommandService.preDownloadCommand=
ShellCommandService.postDownloadCommand=
ShellCommandService.postExecuteCommand=
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
#absolute path to the UDF directory
downloader.udfDirectory=.
# The first part of the UDF filename
downloader.udfFilePrefix=CloudCard_Photos_
# The extension to use for the UDF filename
downloader.udfFileExtension=.udf
# The format of the date in the UDF description
downloader.descriptionDateFormat=MMM dd 'at' HHmm
# The format of the date in the UDF batch ID field and in the filename suffix
downloader.udfBatchIdDateFormat=YYYYMMddHHmm
# The format of the date in the UDF Created field
downloader.createdDateFormat=YYYY-MM-dd
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
#absolute path to the CSV directory
downloader.csvDirectory=.
# The first part of the CSV filename
downloader.csvFilePrefix=CloudCard_Photos_
# The extension to use for the CSV filename
downloader.csvFileExtension=.csv
# The format of the date in the CSV batch ID field and in the filename suffix
downloader.csvBatchIdDateFormat=YYYYMMddHHmm
# Enable/Disable CSV file generation
downloader.enableCsv=true
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
# DatabaseStorageService Settings
db.mapping.column.studentId=STUDENT_ID
db.mapping.column.photoId=PHOTO
db.mapping.table=CLOUDCARD_PHOTOS
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
# Database Connection Info
db.datasource.enabled=false
# JDBC Driver
# - oracle.jdbc.OracleDriver
# - com.microsoft.sqlserver.jdbc.SQLServerDriver
# - com.mysql.cj.jdbc.Driver
db.datasource.driverClassName=
db.datasource.url=
db.datasource.username=
db.datasource.password=
db.datasource.schema=
# SQL Dialect
# - org.hibernate.dialect.Oracle10gDialect
# - org.hibernate.dialect.SQLServer2012Dialect
# - org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.dialect=
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
# File Name Resolver
#  - SimpleFileNameResolver
#  - DatabaseFileNameResolver
downloader.fileNameResolver=SimpleFileNameResolver
#
# DatabaseFileNameResolver
# Query to get the base file name
DatabaseFileNameResolver.baseFileName.query=
#
# CustomFieldFileNameResolver
CustomFieldFileNameResolver.include=
CustomFieldFileNameResolver.delimiter=-
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
# Pre Processor
#  - DoNothingPreProcessor
#  - BytesLinkPreProcessor
downloader.preProcessor=DoNothingPreProcessor
#
# BytesLinkPreProcessor
# These are the templates to use for rewriting the bytes links. The photo's public keys will replace the token '{publicKey}' if it exists.
BytesLinkPreprocessor.urlTemplate=
BytesLinkPreprocessor.additionalPhotoUrlTemplate=
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
# Post Processor
#  - DoNothingPostProcessor
#  - DatabasePostProcessor
downloader.postProcessor=DoNothingPostProcessor
#
# DatabasePostProcessor
# When saving the metadata about a photo, this file path is saved instead of the actual file path of the downloaded photo
DatabasePostProcessor.override.photoFilePath=
# This is the update/insert query that will update/insert into the DB
DatabasePostProcessor.query=
# these are the names of the parameters that will be passed into the update query
DatabasePostProcessor.query.paramNames=
# these are the sql types of the parameters that will be passed into the update query
DatabasePostProcessor.query.paramTypes=
#
# AdditionalPhotoPostProcessor
# Specify the Additional Photo Type Names to download. Names must match exactly.
AdditionalPhotoPostProcessor.include=
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
# Summary Service
downloader.summaryService=SimpleSummaryService
SimpleSummaryService.fileName=
SimpleSummaryService.directory=summary
#
# ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ### #
#
# SQS Photo Service
sqsPhotoService.queueUrl=https://sqs.ca-central-1.amazonaws.com/836233235704/wozniak_CloudCard_Download
sqsPhotoService.pollingIntervalSeconds=0
sqsPhotoService.pollingDurationSeconds=20

# TouchNet Client
# specify the following to enable:
#downloader.storageService=TouchNetStorageService
TouchNetClient.apiUrl=
TouchNetClient.developerKey=
TouchNetClient.operatorId=CloudCard
TouchNetClient.operatorPassword=
TouchNetClient.terminalId=
TouchNetClient.terminalType=ThirdParty
TouchNetClient.originId=

#Origo Client
#Specify the following to enable:
#downloader.storageService=OrigoStorageService
Origo.eventManagementApi=https://event.api.origo.hidglobal.com
Origo.mobileIdentitiesApi=https://ma.api.assaabloy.com/credential-management
Origo.certIdpApi=https://api.origo.hidglobal.com
Origo.organizationId=
Origo.clientSecret=
Origo.clientId=
Origo.contentType=application/vnd.assaabloy.ma.credential-management-2.2+json
Origo.applicationVersion=2.2
Origo.applicationId=
Origo.replaceExistingPhotos=
Origo.usePkiAuth=true
Origo.tokenUrl=

# ManifestFileService
ManifestFileService=DoNothingManifestFileService

# CSVManifestFileService
CSVManifestFileService.fileName=manifest
CSVManifestFileService.fileNameDateFormat=
CSVManifestFileService.directory=downloaded-photos
CSVManifestFileService.delimiter=,
CSVManifestFileService.doubleQuoteValues=true
CSVManifestFileService.quoteMode=ALL_NON_NULL
CSVManifestFileService.quoteCharacter="
CSVManifestFileService.escapeCharacter=
CSVManifestFileService.dateFormat=
CSVManifestFileService.headerAndColumnMap={'Cardholder_ID':'person.identifier','Photo_Status': 'status','Photo_Date_Submitted':'dateCreated'}